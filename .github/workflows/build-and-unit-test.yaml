name: build-and-unit-test

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      should_run:
        required: true
        type: string
      timeout-minutes:
        required: false
        type: number

permissions:
  packages: write

jobs:
  always_success:
    runs-on: ubuntu-latest
    steps:
      - name: Mark workflow as success when no changes
        run: echo "This job ensures workflow never ends as skipped"

  build_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    if: ${{ inputs.should_run == 'true' }}
    defaults:
      run:
        working-directory: ${{ inputs.project }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Stabilize timestamps
        run: git ls-files | xargs touch --date="@$(git log -1 --format=%ct)"

      - name: Build Builder Stage (cache only)
        uses: docker/build-push-action@v6
        env:
          OWNER: segevgr
        with:
          context: ./${{ inputs.project }}
          push: true
          load: false
          target: builder
          tags: ghcr.io/${{ env.OWNER }}/${{ inputs.project }}:builder
          cache-from: type=gha,scope=${{ inputs.project }},mode=max
          cache-to: |
            type=gha,scope=${{ inputs.project }},mode=max
            type=registry,ref=ghcr.io/${{ env.OWNER }}/${{ inputs.project }}:builder,mode=max

      - name: Run Unit Tests
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.project }}
          target: unit-tests
          tags: jamlive/${{ inputs.project }}-test
          push: false
          load: false
          cache-from: type=gha,scope=${{ inputs.project }},mode=max
