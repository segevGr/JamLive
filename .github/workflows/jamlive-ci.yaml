name: jamlive-ci

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "README.md"
  workflow_dispatch:

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/src/**'
            backend:
              - 'backend/src/**'

  frontend_build_and_test:
    needs: detect_changes
    name: Frontend Build & Test
    uses: ./.github/workflows/build-and-unit-test.yaml
    with:
      project: frontend
      should_run: ${{ needs.detect_changes.outputs.frontend }}

  backend_build_and_test:
    needs: detect_changes
    name: Backend Build & Test
    uses: ./.github/workflows/build-and-unit-test.yaml
    with:
      project: backend
      should_run: ${{ needs.detect_changes.outputs.backend }}

  package_e2e_tests_and_publish:
    runs-on: ubuntu-latest
    name: Package E2E Tests and Publish
    needs: [frontend_build_and_test, backend_build_and_test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Docker Compose
        run: docker compose up --build -d
        env:
          PORT: 8000
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
          JWT_COOKIE_EXPIRES_IN: ${{ secrets.JWT_COOKIE_EXPIRES_IN }}
          FRONTEND_ORIGIN: ${{ secrets.FRONTEND_ORIGIN }}
          E2E_BASE_URL: ${{ secrets.E2E_BASE_URL }}
          REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}

      # - name: Backend E2E Testing
      #   working-directory: backend
      #   run: npm run test:e2e

      ########### TBD - E2E TESTING ###########

      - name: Configure AWS
        uses: ./.github/actions/configure-aws
        with:
          aws_role_arn: ${{ secrets.ECR_PERMISSION_ROLE }}
          aws_region: ${{ secrets.AWS_REGION }}

      - name: Publish Frontend Image To ECR
        uses: ./.github/actions/publish-to-ecr
        with:
          local_image: jamlive-front:test
          repo_uri: ${{ secrets.FRONTEND_ECR_URI }}

      - name: Export Frontend Build
        run: |
          container_id=$(docker ps -qf "ancestor=jamlive-front:test")
          docker cp $container_id:/app/build ./frontend_build

      - name: Publish Frontend Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend_build
          path: ./frontend_build

  deploy_frontend:
    name: Deploy Frontend
    needs: package_e2e_tests_and_publish
    uses: ./.github/workflows/frontend-cd.yaml
    secrets: inherit
    permissions:
      id-token: write
    with:
      artifact: frontend_build
