name: jamlive-ci

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "README.md"
      - "postman/**"
      - "screenshots/**"
      - "terraform/**"
  workflow_dispatch:

permissions:
  id-token: write

concurrency:
  group: jamlive-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cancel-previous:
    name: Cancel Previous Workflow Runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  detect_changes:
    name: Detect Code Changes
    runs-on: ubuntu-latest
    needs: cancel-previous
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/src/**'
            backend:
              - 'backend/src/**'

  frontend_build_and_test:
    needs: detect_changes
    name: Frontend Build & Test
    uses: ./.github/workflows/build-and-unit-test.yaml
    with:
      project: frontend
      should_run: ${{ needs.detect_changes.outputs.frontend }}

  backend_build_and_test:
    needs: detect_changes
    name: Backend Build & Test
    uses: ./.github/workflows/build-and-unit-test.yaml
    with:
      project: backend
      should_run: ${{ needs.detect_changes.outputs.backend }}

  package_e2e_tests_and_publish:
    runs-on: ubuntu-latest
    name: Package E2E Tests and Publish
    needs: [frontend_build_and_test, backend_build_and_test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Cache Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: false
          load: true
          tags: jamlive-front:test
          build-args: |
            REACT_APP_BASE_URL=${{ secrets.BACKEND_URL }}
          cache-from: type=gha,scope=frontend
          cache-to: type=gha,scope=frontend,mode=max

      - name: Build and Cache Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: false
          load: true
          tags: jamlive-back:test
          cache-from: type=gha,scope=backend
          cache-to: type=gha,scope=backend,mode=max

      - name: Run Docker Compose
        run: docker compose up -d 
        env:
          MONGO_URI: mongodb://db:27017/jamlive_dev
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: E2E Tests
        uses: ./.github/actions/e2e-tests

      - name: Configure AWS
        uses: ./.github/actions/configure-aws
        with:
          aws_role_arn: ${{ secrets.ECR_ROLE_ARN }}
          aws_region: ${{ secrets.AWS_REGION }}

      - name: Publish Backend Image To ECR
        uses: ./.github/actions/publish-to-ecr
        with:
          local_image: jamlive-back:test
          repo_uri: ${{ secrets.BACKEND_ECR_URI }}

      - name: Publish Frontend Image To ECR
        uses: ./.github/actions/publish-to-ecr
        with:
          local_image: jamlive-front:test
          repo_uri: ${{ secrets.FRONTEND_ECR_URI }}

      - name: Export Frontend Build
        run: |
          container_id=$(docker ps -qf "ancestor=jamlive-front:test")
          docker cp $container_id:/app/build ./frontend_build

      - name: Publish Frontend Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend_build
          path: ./frontend_build
          retention-days: 1

  deploy_frontend:
    name: Deploy Frontend
    needs: package_e2e_tests_and_publish
    uses: ./.github/workflows/frontend-cd.yaml
    secrets: inherit
    permissions:
      id-token: write
    with:
      artifact: frontend_build
